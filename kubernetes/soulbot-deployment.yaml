apiVersion: apps/v1
kind: Deployment
metadata:
  name: soulbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: soulbot
  template:
    metadata:
      labels:
        app: soulbot
    spec:
      containers:
      - name: soulbot
        image: unprofessional/soulbot:rc-0.0.1
        imagePullPolicy: Never
        ports:
        - containerPort: 80  # HTTP
        # - containerPort: 443 # HTTPS
        # only uncomment above if using soulbot-ingress.yaml service as a
        # Kubernetes ingress controller
        env:
        - name: DISCORD_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: discord-bot-secret
              key: DISCORD_BOT_TOKEN
        - name: DISCORD_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: discord-client-id
              key: CLIENT_ID
        - name: DISCORD_GUILD_ID
          valueFrom:
            secretKeyRef:
              name: discord-dev-guild-id
              key: DEV_GUILD_ID
        # Postgres
        - name: PG_HOST
          valueFrom:
            secretKeyRef:
              name: pg-host
              key: PG_HOST
        - name: PG_PORT
          valueFrom:
            secretKeyRef:
              name: pg-port
              key: PG_PORT
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: pg-user
              key: PG_USER
        - name: PG_PASS
          valueFrom:
            secretKeyRef:
              name: pg-pass
              key: PG_PASS
        - name: PG_DB
          valueFrom:
            secretKeyRef:
              name: pg-db
              key: PG_DB
        # TODO: Ollama Config
        - name: STORE_PATH
          value: "/data"
        - name: GUILD_STORE_FILE
          value: "guild.store.json"
        - name: CHANNEL_STORE_FILE
          value: "channel.store.json"
        - name: MEMBER_STORE_FILE
          value: "member.store.json"
        - name: FEATURE_STORE_FILE
          value: "feature.store.json"
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: temp-data-volume
          mountPath: /tempdata
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: soulbot-pvc
      - name: temp-data-volume
        emptyDir:
          medium: Memory

##############################################################################
############# ALTERNATE FOR GPU â€” TODO: REFACTOR INTO SEPARATE DOCKERFILE ####
##############################################################################

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: soulbot
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: soulbot
#   template:
#     metadata:
#       labels:
#         app: soulbot
#     spec:
#       containers:
#       - name: soulbot
#         image: unprofessional/soulbot:rc-0.0.1
#         imagePullPolicy: Never
#         ports:
#         - containerPort: 80  # HTTP
#         env:
#         - name: DISCORD_BOT_TOKEN
#           valueFrom:
#             secretKeyRef:
#               name: discord-bot-secret
#               key: DISCORD_BOT_TOKEN
#         - name: STORE_PATH
#           value: "/data"
#         - name: GUILD_STORE_FILE
#           value: "guild.store.json"
#         - name: CHANNEL_STORE_FILE
#           value: "channel.store.json"
#         - name: MEMBER_STORE_FILE
#           value: "member.store.json"
#         - name: FEATURE_STORE_FILE
#           value: "feature.store.json"
#         - name: HOST
#           value: "localhost"
#         - name: PORT
#           value: "5432"
#         - name: PG_USER
#           value: "postgres"
#         volumeMounts:
#         - name: data-volume
#           mountPath: /data
#         - name: temp-data-volume
#           mountPath: /tempdata
#         resources:
#           limits:
#             nvidia.com/gpu: 2 # Request 1 GPU
#       volumes:
#       - name: data-volume
#         persistentVolumeClaim:
#           claimName: soulbot-pvc
#       - name: temp-data-volume
#         emptyDir:
#           medium: Memory
